#include <iostream>
using namespace std;

class StaticList {
private:
    int* data;
    int size;
    int capacity;

public:
    StaticList(int capacity) {
        this->capacity = capacity;
        this->size = 0;
        this->data = new int[capacity];
    }

    void clear() {
        size = 0;
    }

    void add(int value) {
        if (isFull()) {
            cout << "List is full" << endl;
            return;
        }
        data[size++] = value;
    }

    void add(int value, int pos) {
        if (isFull()) {
            cout << "List is full" << endl;
            return;
        }
        if (pos < 0 || pos > size) {
            cout << "Invalid position" << endl;
            return;
        }
        for (int i = size; i > pos; i--) {
            data[i] = data[i - 1];
        }
        data[pos] = value;
        size++;
    }

    int remove(int pos) {
        if (isEmpty()) {
            cout << "List is empty" << endl;
            return -1;
        }
        if (pos < 0 || pos >= size) {
            cout << "Invalid position" << endl;
            return -1;
        }
        int removedValue = data[pos];
        for (int i = pos; i < size - 1; i++) {
            data[i] = data[i + 1];
        }
        size--;
        return removedValue;
    }

    bool isEmpty() {
        return size == 0;
    }

    bool isFull() {
        return size == capacity;
    }

    void setData(int value, int pos) {
        if (pos < 0 || pos >= size) {
            cout << "Invalid position" << endl;
            return;
        }
        data[pos] = value;
    }

    int getData(int pos) {
        if (pos < 0 || pos >= size) {
            cout << "Invalid position" << endl;
            return -1;
        }
        return data[pos];
    }

    int getSize() {
        return size;
    }

    int find(int value) {
        for (int i = 0; i < size; i++) {
            if (data[i] == value) {
                return i;
            }
        }
        return -1; 
    }

    ~StaticList() {
        delete[] data;
    }
};

int main() {
    StaticList list(5);

    list.add(10);
    list.add(20);
    list.add(30);
    list.add(40, 1); 
    cout << "Element at position 1: " << list.getData(1) << endl;

    list.remove(2); 
    cout << "Element at position 2 after removal: " << list.getData(2) << endl;

    cout << "Size of list: " << list.getSize() << endl;

    cout << "Find position of 20: " << list.find(20) << endl;

    list.clear();
    cout << "Size after clearing: " << list.getSize() << endl;

    return 0;
}
